function getBlackMarketRefreshTime() :: string:
    set {_initDiff} to difference between now and {blackMarket::lastRefresh}
    set {_relDiff} to difference between {_initDiff} and {-cfg::blackMarket::refreshTime}
    return formatTimespan({_relDiff})

function getBlackMarketLore(item: item, admin: boolean = false) :: strings:
    exit if {blackMarket::items::%{_item}%} is not set
    
    set {_lore::*} to "", "&8➠ &fMoney: &e%{blackMarket::costs::%{_item}%::money} ? 0%$", "&8➠ &fShards: &d%{blackMarket::costs::%{_item}%::shards} ? 0%", ""
    if {_admin} = true:
        add "&8➠ &7LMB to &amodify", "&8➠ &7RMB to &cremove" to {_lore::*}
    else if {blackMarket::purchased::%{_item}%} is not set:
        add "&8➠ &7LMB to buy &8(Money)", "&8➠ &7RMB to buy &8(Shards)" to {_lore::*}
    else:
        add "&c&lPURCHASED" to {_lore::*}
    return {_lore::*}

function removeBlackMarketLore(p: player, item: item) :: item:
    if line (size of lore of {_item}) of lore of {_item} = "&c&lPURCHASED":
        set {_lines} to 5
    else:
        set {_lines} to 6

    set {_lore::*} to lore of {_item}
    set lore of {_item} to first (size of {_lore::*} - 6) elements of {_lore::*}

    if {blackMarket::items::%{_item}%} is not set:
        send {-cfg::errorMsg} to {_p}
    else:
        return {_item}