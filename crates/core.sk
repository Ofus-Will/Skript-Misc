command /crate [<text>] [<text>]:   
    aliases: /crates 
    permission: admin.crates 
    permission message: &cPermission denied!
    usage: &c/crates (create/delete/edit/list/setblock) (crate)
    trigger:
        if arg-1 is not set:
            send usage
        else if arg-1 = "list":
            set {_crates::*} to all indices of {crates::*}
            if {_crates::*} is not set:
                send "&cThere are currently no crates!"
                exit 

            send "&aCrates:"
            loop {_crates::*}:
                set {_loc} to {crates::%loop-value%::location}
                if {_loc} is set:
                    send "&a- %loop-value% (%locString({_loc})%)"
                else:
                    send "&a- %loop-value% (no block set)"

        else if arg-1 != "create", "delete", "setblock" or "edit":
            send usage 
        
        else if arg-2 is not set:
            send "&cPlease specify a crate!"

        else if arg-1 = "create":

            if {crates::%arg-2%} is set:
                send "&cThat crate already exists!"
                exit 

            set {crates::%arg-2%} to arg-2 
            send "&aSuccessfully created crate %prettify(arg-2)%"

        else if {crates::%arg-2%} is not set:
            send "&cThat crate does not exist!"

        else if arg-1 = "delete":
            set {_loc} to {crates::%arg-2%::location}
            delete {crates::%arg-2%}, {crates::%arg-2%::*}, {locationToCrate::%{_loc}%}
            
            send "&aSuccessfully deleted %prettify(arg-2)% crate" 

        else if arg-1 = "edit":
            openCrateRewardsMenu(player, arg-2, "edit")

        else if arg-1 = "setblock":
            set {_block} to target block
            if target block is not set:
                send "&cYou are not looking at a block!"
            
            else if all:
                type of target block != ender chest 
                inventory of target block is not set 
            then:
                send "&cYour target block does not have an inventory!"

            else:
                set {_loc} to location of {_block}
                set {locationToCrate::%{_loc}%} to arg-2
                set {crates::%arg-2%::location} to {_loc}
                send "&aSet location of %arg-2% crate to %locString({_loc})% (%type of {_block}%)"

command /key [<offline player>] [<text>]:
    permission: admin.crates 
    permission message: &cPermission denied!
    usage: &c/key (player) (crate)
    trigger:
        giveCrateKey(arg-1, arg-2, sender, true)

command /keyall <text>:
    usage: &c/keyall (crate)
    permission: admin.crates 
    permission message: &cPermission denied!
    trigger:
        if {crates::%arg-1%} is not set:
            send "&cThat crate does not exist!"
            exit 

        set {_msg} to {-cfg::crates::keyAllMsg}
        replace all "<crate>" in {_msg} with prettify(arg-1)
        send {_msg} to all players
        giveCrateKey(all players, arg-1, sender)

on right click:
    if event-block is set:
        set {_loc} to location of event-block
        set {_crate} to {locationToCrate::%{_loc}%}
        if {_crate} is set:
            cancel event 

            set {_nbt} to string tag "custom_item" of custom nbt of tool of player 
            if {_nbt} = "%{_crate}%_crate_key":
                remove 1 of tool from tool
                openCrateRewardsMenu(player, {_crate}, "open")
            else:
                push player backwards at speed 0.5
                send "&cYou do not have a %prettify({_crate})% crate key!" to player

on left click:
    if event-block is set:
        set {_loc} to location of event-block
        set {_crate} to {locationToCrate::%{_loc}%}
        if {_crate} is set:
            cancel event 

            openCrateRewardsMenu(player, {_crate}, "view")